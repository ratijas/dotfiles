alias zshconfig="$VISUAL $HOME/.zshrc"
alias zshaliases="$VISUAL $HOME/.zsh_aliases"
alias k="k -h"

alias sshtk="ssh root@ratijas.tk"

function ssh-sailfish() { ssh -p "$1" -i /opt/SailfishOS/SDK/vmshare/ssh/private_keys/"$2"/"$3" "$3"@localhost }
alias ssh-sailfish-emu-nemo="ssh-sailfish 2223 SailfishOS_Emulator nemo"
alias ssh-sailfish-emu-root="ssh-sailfish 2223 SailfishOS_Emulator root"
alias ssh-sailfish-sdk-mer=" ssh-sailfish 2222 engine mersdk"
alias ssh-sailfish-sdk-root="ssh-sailfish 2222 engine root"

alias /autism="pacaur -Suy"
alias whatismyip="wget -4qO- http://whatismyip.akamai.com/"
alias urldecode='python -c "import sys; from urllib.parse import unquote_plus as up; sys.stdout.write(up(sys.stdin.read()))"'
export mnt="/var/run/media/$USER"
function mnt() { cd "$mnt" }
alias p="cd ~/projects"
alias :q="exit"
alias https='http --default-scheme=https'
function weather() { curl http://wttr.in/"$1" }
alias inno="weather Иннополис"
function :path() { local ptr="${1:-PATH}"; local str="${(P)ptr}"; echo "$str" | tr ':' '\n' }
alias :p=":path"
function ihaskell-notebook() { workon ihaskell && stack exec -- jupyter-notebook --notebook-dir=$HOME/projects/haskell }
alias ghc-find="stack exec -- ghc-pkg find-module --simple-output"
type hexyl &> /dev/null && alias xxd=hexyl

function any-repl () {
    if [ $# -lt 2 ]; then
        echo "Usage: $0 prompt cmd [arg ...]"
        exit 1
    fi
    typeset prompt=$1
    shift
    typeset -a cmdargs=($@)
    typeset -g query
    typeset query_prompt='%%%F{green}'$prompt'%f '

    while vared -p $query_prompt -e -c query
    do
        if [[ $query =~ '^\s*$' ]]
        then
            query=""
        else
            $cmdargs $query
        fi
    done
}
function _hoogle-repl-internal() {
    # $1 is a query
    if [[ $1 =~ '^\s*-' ]]; then
        hoogle ${=1} # raw parameters
    else
        hoogle $1    # single string query
    fi
}
alias hoogle-repl="any-repl hoogle _hoogle-repl-internal"

alias sen="docker run -v /var/run/docker.sock:/run/docker.sock -it --rm -e TERM tomastomecek/sen"

if type xdg-open &>/dev/null; then
    function open() {
        if [ $# = 0 ]; then
            1=.
        fi
        xdg-open "$@"
    }
fi

function fix-intellij() {
    POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()
    # prepend
    POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status $POWERLEVEL9K_LEFT_PROMPT_ELEMENTS)
}

function installed-size() {
    # Show total installed size of all packages on Arch Linux system in human-readable format.
    #
    # Usage:
    #   installed-size [units]
    #
    # Options:
    #   units
    #       (Documentation from `man 1 expac`)
    #       Format packages size in SI units according to `units`. Valid options are:
    #           B, K, M, G, T, P, E, Z, Y
    #       Optional, defaults to `G`.
    #
    local units="${1:-G}"
    expac -H "$units" '%m' | awk '{sum += $1} END {print sum, $2}'
}
