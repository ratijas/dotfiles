#compdef kdesrc-build

local expl ret=1

_kdesrc_build_modules() {
  typeset -agU kdesrc_build_modules
  if _cache_invalid kdesrc_build_modules || ! _retrieve_cache kdesrc_build_modules
  then
    # [1,-2] is a slice that removes last element (count is 1-based in zsh).
    # Then strip " -- " prefix and " *" suffix (i.e. everything after and including first whitespace).
    # (@) array Expansion Flags are needed because we need to operate on each element separately.
    kdesrc_build_modules=( "${(@)${(@)${(@)${(f)"$(
      _call_program kdesrc-build-modules \
        kdesrc-build --list-build --no-src
      )"}[1,-2]}# ── }%% *}" )
    _store_cache kdesrc_build_modules kdesrc_build_modules
  fi
  _wanted modules expl 'module' \
    compadd -a kdesrc_build_modules && ret=0
}

_arguments -C \
  "--pretend[Don't actually take major actions, instead describe what would be done]" \
  '--list-build[List what modules would be built in the order in which they would be built]' \
  '--dependency-tree[Print out dependency information on the modules that would be built, using a `tree` format]' \
  "--no-src[Don't update source code, just build/install]" \
  "--src-only[Only update the source code]" \
  "--refresh-build[Start the build from scratch]" \
  '--rc-file=[Read configuration from filename instead of default]:::_files' \
  "--initial-setup[Installs Plasma env vars (~/.bashrc), required system pkgs, and a base kdesrc-buildrc]" \
  "--resume-from=[Skips modules until just before or after the given package, then operates as normal]:::_kdesrc_build_modules" \
  "--resume-after=[Skips modules until just before or after the given package, then operates as normal]:::_kdesrc_build_modules" \
  "--stop-before=[Stops just before or after the given package is reached]:::_kdesrc_build_modules" \
  "--stop-after=[Stops just before or after the given package is reached]:::_kdesrc_build_modules" \
  "--include-dependencies[Also builds KDE-based dependencies of given modules]" \
  "--no-include-dependencies[Don't builds KDE-based dependencies of given modules]" \
  '--stop-on-failure[Stops the build as soon as a package fails to build]' \
  '*:: :_kdesrc_build_modules' && ret=0

return $ret
